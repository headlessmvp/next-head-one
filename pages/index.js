import { useContext, useEffect } from "react"

// Next
import Head from "next/head"

// Components
import { Navbar } from "../components/Navbar"
import { Layout } from "../components/Layout"

// Styles
import styles from "../styles/Home.module.css"
import { ProductCard } from "../components/ProductCard"

// Context
import { ProductContext } from "../context/ProductContext"

// Sanity
import { createClient } from "next-sanity"

export default function Home({ data }) {
  const { products, setProducts, setAllData } = useContext(ProductContext)
  // console.log("Data: ", data)
  // console.log("Poducts: ", data.categories[0].products)
  console.log("DATA GOT: ", products)
  useEffect(() => {
    setProducts(data.categories[0].products)
    setAllData(data)
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Head 01</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />
      <main className="bg-white">
        <Layout>
          <div className="mx-auto max-w-2xl py-10 sm:py-2  lg:max-w-7xl">
            <div className="mt-8 grid grid-cols-1 gap-y-12 sm:grid-cols-2 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8">
              {products.map((product) => (
                <ProductCard
                  key={product.reference}
                  product={product}
                  name={product.name}
                  imageAlt={product.images[0].name}
                  imageSrc={product.images[0].url}
                  id={product.id}
                  color={product.color}
                  price={product.price}
                />
              ))}
            </div>
          </div>
        </Layout>
      </main>
    </div>
  )
}

const client = createClient({
  projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,
  dataset: process.env.NEXT_PUBLIC_SANITY_DATASET,
  apiVersion: "2022-09-08",
  token: process.env.NEXT_PUBLIC_SANITY_AUTH_TOKEN,
  useCdn: false,
})

export async function getStaticProps() {
  const heads = await client.fetch(`*[_type == "head"]{
    id,
    name,
    url,
    'categories': categories[]->{
      name,
      label,
      slug,
      description,
      'products': products[]->{
        name,
        description,
        color,
        price,
        currency,
        reference,
        'images': images[]->{
          name,
          description,
          'url': images.asset->url
      }
    }
  }
}`)

  let filtered = {}

  if (heads.length > 0) {
    filtered = heads.filter(
      (head) => head.id === process.env.NEXT_PUBLIC_HEAD_ID
    )
  }

  return {
    props: {
      data: filtered[0],
    },
  }
}
